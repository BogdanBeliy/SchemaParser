{
    "openapi": "3.0.3",
    "info": {
        "title": "Hronos Auth API",
        "version": "1.0.0",
        "description": "Your project description"
    },
    "paths": {
        "/api/v1/users/": {
            "get": {
                "operationId": "api_v1_users_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Customers :: Пользователи"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_v1_users_create",
                "tags": [
                    "Customers :: Пользователи"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/users/{id}/": {
            "get": {
                "operationId": "api_v1_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "Customers :: Пользователи"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRetrieve"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_v1_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "Customers :: Пользователи"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_v1_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "Customers :: Пользователи"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/auth/jwt/create/": {
            "post": {
                "operationId": "auth_jwt_create_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/jwt/refresh/": {
            "post": {
                "operationId": "auth_jwt_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/jwt/verify/": {
            "post": {
                "operationId": "auth_jwt_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenVerify"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "email",
                    "password",
                    "refresh"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenVerify": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UserCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Имя пользователя",
                        "maxLength": 254
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "First name",
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Last name",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Middle name",
                        "maxLength": 255
                    },
                    "age": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "email",
                    "id"
                ]
            },
            "UserList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "First name",
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Last name",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Middle name",
                        "maxLength": 255
                    },
                    "age": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "UserRetrieve": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "First name",
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Last name",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Middle name",
                        "maxLength": 255
                    },
                    "age": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "First name",
                        "maxLength": 255
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Last name",
                        "maxLength": 255
                    },
                    "middle_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Middle name",
                        "maxLength": 255
                    },
                    "age": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "username"
                ]
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    }
}
